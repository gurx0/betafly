import serial
import struct
import time

# –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ø–æ–ª–µ—Ç–Ω—ã–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–º
ser = serial.Serial('COM8', 115200, timeout=1)  # –£–∫–∞–∂–∏ –Ω—É–∂–Ω—ã–π COM –ø–æ—Ä—Ç

# –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –¥–ª—è MSP-–ø–∞–∫–µ—Ç–∞
def checksum(data):
    return sum(data) & 0xFF

# –û—Ç–ø—Ä–∞–≤–∫–∞ MSP-–∫–æ–º–∞–Ω–¥—ã
def send_msp(command, data=[]):
    payload = struct.pack(f'<{len(data)}B', *data) if data else b''
    size = len(payload)
    chk = checksum([size, command] + list(payload))
    packet = b'$M<' + struct.pack('<B', size) + struct.pack('<B', command) + payload + struct.pack('<B', chk)
    ser.write(packet)

# –ß—Ç–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ø–æ–ª–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
def read_msp_response():
    header = ser.read(3)
    if header != b'$M>':
        print("[–û—à–∏–±–∫–∞] –ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ MSP:", header)
        return None, None
    size = ord(ser.read(1))
    code = ord(ser.read(1))
    data = ser.read(size)
    checksum_byte = ord(ser.read(1))
    return code, data

def get_baro_altitude():
    send_msp(109)  # MSP_ALTITUDE
    time.sleep(0.1)
    code, data = read_msp_response()
    if code != 109 or data is None:
        print("[!] –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥")
        return

    # Debug: –í—ã–≤–æ–¥ —Å—ã—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∏—Ö –¥–ª–∏–Ω—ã
    print(f"[Debug] Raw data: {data}, data Length: {len(data)}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –¥–∞–Ω–Ω—ã—Ö
    if len(data) != 6:
        print(f"[Error] –û–∂–∏–¥–∞–ª–æ—Å—å 6 –±–∞–π—Ç, –ø–æ–ª—É—á–µ–Ω–æ {len(data)} –±–∞–π—Ç")
        return

    # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞: int32 altitude, int16 variance
    alt, var = struct.unpack('<ih', data)
    print(f"[üì°] –í—ã—Å–æ—Ç–∞: {alt / 100.0} –º")
    print(f"[üìä] –î–∏—Å–ø–µ—Ä—Å–∏—è: {var}")

# –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
get_baro_altitude()

# –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–∞ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
ser.close()
